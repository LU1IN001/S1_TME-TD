Case = Tuple[bool,bool,bool,bool,str]
Laby = List[List[Case]]

laby1 : Laby = [[(True, True, False, False, ""), (False, False, True, False, "ENTREE")],
                [(True, False, False, True, ""),(False, False, True, False, "SORTIE")]]

laby2 : Laby = [
                [(True, False, False, False, ""),
                 (False, True, True, False, ""),
                 (True, True, False, False, ""),
                 (False, False, True, False, "ENTREE")],
                [(False, False, False, False, ""),
                 (True, True, False, True, ""),
                 (True, False, True, True, ""),
                 (False, True, True, False, "")],
                [(True, False, False, False, ""),
                 (False, False, True, True, ""),
                 (True, True, False, False, ""),
                 (False, False, True, True, "")],
                [(True, False, False, False, "SORTIE"),
                 (True, False, True, False, ""),
                 (True, False, True, True, ""),
                 (False, False, True, False, "")]
                ]


laby3 : Laby = [[(True, True, False, False, ''), (False, False, True, False, ''), (False, True, False, False, ''), (True, False, False, False, ''), (True, True, True, False, ''), (True, False, True, False, ''), (True, True, True, False, ''), (True, False, True, False, ''), (True, False, True, False, ''), (True, False, True, False, ''), (False, False, True, False, ''), (True, True, False, False, ''), (True, False, True, False, ''), (False, True, True, False, ''), (False, True, False, False, ''), (True, False, False, False, ''), (False, True, True, False, ''), (False, True, False, False, ''), (False, True, False, False, ''), (False, True, False, False, 'ENTREE')], [(True, False, False, True, ''), (False, True, True, False, ''), (True, True, False, True, ''), (True, False, True, False, ''), (True, False, True, True, ''), (False, False, True, False, ''), (False, False, False, True, ''), (True, False, False, False, ''), (True, True, True, False, ''), (True, True, True, False, ''), (True, False, True, False, ''), (True, True, True, True, ''), (False, False, True, False, ''), (False, True, False, True, ''), (False, True, False, True, ''), (True, False, False, False, ''), (True, False, True, True, ''), (False, True, True, True, ''), (False, True, False, True, ''), (False, True, False, True, '')], [(True, True, False, False, ''), (True, True, True, True, ''), (True, False, True, True, ''), (True, True, True, False, ''), (True, False, True, False, ''), (False, True, True, False, ''), (True, False, False, False, ''), (False, True, True, False, ''), (False, False, False, True, ''), (False, True, False, True, ''), (True, False, False, False, ''), (True, True, True, True, ''), (False, False, True, False, ''), (True, False, False, True, ''), (False, True, True, True, ''), (True, False, False, False, ''), (False, True, True, False, ''), (True, False, False, True, ''), (False, True, True, True, ''), (False, True, False, True, '')], [(False, True, False, True, ''), (True, False, False, True, ''), (False, False, True, False, ''), (True, False, False, True, ''), (False, True, True, False, ''), (False, False, False, True, ''), (False, True, False, False, ''), (True, True, False, True, ''), (False, False, True, False, ''), (True, True, False, True, ''), (False, True, True, False, ''), (False, True, False, True, ''), (False, True, False, False, ''), (True, False, False, False, ''), (False, True, True, True, ''), (True, True, False, False, ''), (True, True, True, True, ''), (True, False, True, False, ''), (False, True, True, True, ''), (False, True, False, True, '')], [(True, False, False, True, ''), (True, True, True, False, ''), (False, False, True, False, ''), (True, False, False, False, ''), (False, True, True, True, ''), (True, True, False, False, ''), (True, False, True, True, ''), (False, True, True, True, ''), (True, False, False, False, ''), (False, False, True, True, ''), (False, False, False, True, ''), (True, True, False, True, ''), (True, False, True, True, ''), (False, True, True, False, ''), (True, True, False, True, ''), (False, False, True, True, ''), (False, True, False, True, ''), (False, True, False, False, ''), (False, False, False, True, ''), (False, True, False, True, '')], [(True, False, False, False, ''), (True, True, True, True, ''), (False, False, True, False, ''), (True, False, False, False, ''), (True, False, True, True, ''), (True, True, True, True, ''), (False, True, True, False, ''), (False, False, False, True, ''), (True, True, False, False, ''), (False, False, True, False, ''), (False, True, False, False, ''), (False, False, False, True, ''), (True, False, False, False, ''), (False, False, True, True, ''), (False, True, False, True, ''), (False, True, False, False, ''), (True, False, False, True, ''), (True, True, True, True, ''), (False, False, True, False, ''), (False, True, False, True, '')], [(True, False, False, False, ''), (True, True, True, True, ''), (True, False, True, False, ''), (False, False, True, False, ''), (True, False, False, False, ''), (False, True, True, True, ''), (False, False, False, True, ''), (False, True, False, False, ''), (False, True, False, True, ''), (True, False, False, False, ''), (False, True, True, True, ''), (False, True, False, False, ''), (True, True, False, False, ''), (False, False, True, False, ''), (False, False, False, True, ''), (True, True, False, True, ''), (False, False, True, False, ''), (False, True, False, True, ''), (True, True, False, False, ''), (False, True, True, True, '')], [(True, True, False, False, ''), (True, False, True, True, ''), (False, False, True, False, ''), (True, True, False, False, ''), (True, False, True, False, ''), (False, True, True, True, ''), (False, True, False, False, ''), (False, True, False, True, ''), (False, True, False, True, ''), (True, True, False, False, ''), (True, False, True, True, ''), (False, False, True, True, ''), (False, True, False, True, ''), (True, False, False, False, ''), (False, True, True, False, ''), (True, False, False, True, ''), (True, True, True, False, ''), (True, False, True, True, ''), (False, True, True, True, ''), (False, False, False, True, '')], [(False, False, False, True, ''), (True, True, False, False, ''), (False, True, True, False, ''), (False, False, False, True, ''), (True, False, False, False, ''), (True, False, True, True, ''), (False, True, True, True, ''), (False, True, False, True, ''), (False, True, False, True, ''), (False, True, False, True, ''), (True, False, False, False, ''), (False, True, True, False, ''), (False, True, False, True, ''), (False, True, False, False, ''), (True, True, False, True, ''), (False, False, True, False, ''), (True, False, False, True, ''), (False, True, True, False, ''), (True, False, False, True, ''), (False, True, True, False, '')], [(False, True, False, False, ''), (False, True, False, True, ''), (True, False, False, True, ''), (False, True, True, False, ''), (True, False, False, False, ''), (True, True, True, False, ''), (True, False, True, True, ''), (True, False, True, True, ''), (True, False, True, True, ''), (False, False, True, True, ''), (True, False, False, False, ''), (True, False, True, True, ''), (False, True, True, True, ''), (True, False, False, True, ''), (False, True, True, True, ''), (False, True, False, False, ''), (True, False, False, False, ''), (False, True, True, True, ''), (True, True, False, False, ''), (False, False, True, True, '')], [(True, False, False, True, ''), (False, True, True, True, ''), (True, False, False, False, ''), (True, True, True, True, ''), (True, False, True, False, ''), (True, True, True, True, ''), (True, False, True, False, ''), (False, True, True, False, ''), (False, True, False, False, ''), (False, True, False, False, ''), (True, False, False, False, ''), (False, True, True, False, ''), (True, False, False, True, ''), (True, False, True, False, ''), (True, False, True, True, ''), (False, True, True, True, ''), (True, True, False, False, ''), (False, False, True, True, ''), (True, False, False, True, ''), (False, True, True, False, '')], [(True, False, False, False, ''), (True, False, True, True, ''), (False, False, True, False, ''), (True, False, False, True, ''), (False, True, True, False, ''), (False, True, False, True, ''), (True, False, False, False, ''), (True, False, True, True, ''), (True, False, True, True, ''), (True, False, True, True, ''), (True, False, True, False, ''), (False, False, True, True, ''), (True, True, False, False, ''), (False, True, True, False, ''), (True, True, False, False, ''), (True, True, True, True, ''), (False, True, True, True, ''), (True, False, False, False, ''), (False, True, True, False, ''), (False, False, False, True, '')], [(False, True, False, False, ''), (True, False, False, False, ''), (True, True, True, False, ''), (False, True, True, False, ''), (False, True, False, True, ''), (True, False, False, True, ''), (True, False, True, False, ''), (True, False, True, False, ''), (True, False, True, False, ''), (True, True, True, False, ''), (True, True, True, False, ''), (False, False, True, False, ''), (False, False, False, True, ''), (True, True, False, True, ''), (False, False, True, True, ''), (False, True, False, True, ''), (True, False, False, True, ''), (False, True, True, False, ''), (True, False, False, True, ''), (False, True, True, False, '')], [(False, True, False, True, ''), (True, False, False, False, ''), (False, False, True, True, ''), (False, True, False, True, ''), (True, False, False, True, ''), (True, True, True, False, ''), (False, True, True, False, ''), (True, True, False, False, ''), (True, True, True, False, ''), (False, True, True, True, ''), (True, False, False, True, ''), (False, True, True, False, ''), (True, False, False, False, ''), (True, True, True, True, ''), (False, True, True, False, ''), (True, False, False, True, ''), (False, False, True, False, ''), (True, False, False, True, ''), (False, False, True, False, ''), (False, True, False, True, '')], [(True, False, False, True, ''), (True, False, True, False, ''), (True, True, True, False, ''), (False, True, True, True, ''), (False, True, False, False, ''), (False, False, False, True, ''), (False, True, False, True, ''), (False, False, False, True, ''), (False, False, False, True, ''), (False, True, False, True, ''), (False, True, False, False, ''), (False, True, False, True, ''), (True, False, False, False, ''), (False, False, True, True, ''), (True, False, False, True, ''), (True, False, True, False, ''), (True, True, True, False, ''), (False, False, True, False, ''), (True, True, False, False, ''), (False, False, True, True, '')], [(True, True, False, False, ''), (True, False, True, False, ''), (False, False, True, True, ''), (False, False, False, True, ''), (False, True, False, True, ''), (True, False, False, False, ''), (True, True, True, True, ''), (False, False, True, False, ''), (False, True, False, False, ''), (False, False, False, True, ''), (True, False, False, True, ''), (True, True, True, True, ''), (True, False, True, False, ''), (True, True, True, False, ''), (False, False, True, False, ''), (False, True, False, False, ''), (True, True, False, True, ''), (False, True, True, False, ''), (False, True, False, True, ''), (False, True, False, False, '')], [(True, False, False, True, ''), (True, True, True, False, ''), (False, False, True, False, ''), (False, True, False, False, ''), (True, True, False, True, ''), (False, False, True, False, ''), (True, False, False, True, ''), (True, True, True, False, ''), (False, False, True, True, ''), (True, True, False, False, ''), (False, False, True, False, ''), (True, False, False, True, ''), (False, True, True, False, ''), (True, True, False, True, ''), (False, True, True, False, ''), (True, True, False, True, ''), (False, True, True, True, ''), (True, False, False, True, ''), (False, False, True, True, ''), (False, True, False, True, '')], [(False, True, False, False, ''), (True, False, False, True, ''), (True, True, True, False, ''), (False, False, True, True, ''), (False, True, False, True, ''), (True, True, False, False, ''), (True, True, True, False, ''), (True, True, True, True, ''), (True, False, True, False, ''), (False, False, True, True, ''), (False, True, False, False, ''), (False, True, False, False, ''), (False, False, False, True, ''), (False, False, False, True, ''), (True, True, False, True, ''), (False, True, True, True, ''), (True, False, False, True, ''), (True, True, True, False, ''), (True, True, True, False, ''), (False, False, True, True, '')], [(True, False, False, True, ''), (False, True, True, False, ''), (True, False, False, True, ''), (True, True, True, False, ''), (False, False, True, True, ''), (False, False, False, True, ''), (False, False, False, True, ''), (True, True, False, True, ''), (True, False, True, False, ''), (False, False, True, False, ''), (True, False, False, True, ''), (True, False, True, True, ''), (True, True, True, False, ''), (True, True, True, False, ''), (False, False, True, True, ''), (False, False, False, True, ''), (True, False, False, False, ''), (False, False, True, True, ''), (False, True, False, True, ''), (False, True, False, False, '')], [(True, False, False, False, 'SORTIE'), (True, False, True, True, ''), (True, False, True, False, ''), (True, False, True, True, ''), (True, False, True, False, ''), (True, False, True, False, ''), (True, False, True, False, ''), (True, False, True, True, ''), (True, False, True, False, ''), (True, False, True, False, ''), (False, False, True, False, ''), (True, False, False, False, ''), (False, False, True, True, ''), (True, False, False, True, ''), (False, False, True, False, ''), (True, False, False, False, ''), (True, False, True, False, ''), (True, False, True, False, ''), (True, False, True, True, ''), (False, False, True, True, '')]]
